#!/bin/bash

# Script para hacer auto-revisi√≥n de c√≥digo siguiendo el ciclo Ship-Ask-Show
# Uso: ./review.sh [branch-name]

# Colores para mensajes
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
RED='\033[0;31m'
PURPLE='\033[0;35m'
NC='\033[0m' # No Color

# Determinar la rama a revisar
if [ -z "$1" ]; then
  BRANCH=$(git branch --show-current)
else
  BRANCH="$1"
fi

echo -e "${BLUE}=== Auto-revisi√≥n de c√≥digo: $BRANCH ===${NC}"
echo

# 1. SHIP - Verificar el estado del c√≥digo
echo -e "${PURPLE}üö¢ SHIP - Verificaci√≥n de c√≥digo${NC}"
echo -e "${YELLOW}Archivos modificados:${NC}"
git diff --name-status main...$BRANCH

echo
echo -e "${YELLOW}Estad√≠sticas de cambios:${NC}"
git diff --stat main...$BRANCH | tail -n1

# Verificar si hay tests
DART_FILES_CHANGED=$(git diff --name-only main...$BRANCH | grep "\.dart$" | wc -l)
TEST_FILES_CHANGED=$(git diff --name-only main...$BRANCH | grep "_test\.dart$" | wc -l)

if [ $DART_FILES_CHANGED -gt 0 ] && [ $TEST_FILES_CHANGED -eq 0 ]; then
  echo -e "\n${RED}‚ö†Ô∏è  No se detectaron cambios en archivos de prueba.${NC}"
  echo -e "${YELLOW}Considera agregar pruebas para los cambios realizados.${NC}"
fi

# 2. ASK - Preguntas para auto-revisi√≥n
echo -e "\n${PURPLE}‚ùì ASK - Auto-revisi√≥n cr√≠tica${NC}"
echo -e "${YELLOW}Por favor, responde estas preguntas:${NC}"

questions=(
  "¬øLa implementaci√≥n resuelve realmente el problema planteado?"
  "¬øSe cubren todos los casos l√≠mite?"
  "¬øEl c√≥digo sigue los est√°ndares del proyecto?"
  "¬øSe han documentado adecuadamente los cambios?"
  "¬øSe han a√±adido pruebas suficientes?"
  "¬øHay c√≥digo duplicado o innecesario?"
)

for i in "${!questions[@]}"; do
  read -p "${BLUE}$((i+1)). ${questions[$i]} ${NC}(s/n): " answer
  if [[ "$answer" != "s" && "$answer" != "S" ]]; then
    echo -e "${RED}‚ö†Ô∏è  Revisa este aspecto antes de continuar.${NC}"
  fi
done

# 3. SHOW - Preparar demostraci√≥n
echo -e "\n${PURPLE}üëÄ SHOW - Preparaci√≥n de demostraci√≥n${NC}"
echo -e "${YELLOW}¬øQuieres crear una nota de demostraci√≥n para este cambio? (s/n):${NC} "
read demo_answer

if [[ "$demo_answer" == "s" || "$demo_answer" == "S" ]]; then
  # Extraer n√∫mero de issue del nombre de la rama
  ISSUE_NUMBER=$(echo $BRANCH | grep -oE '[0-9]+' | head -1)
  DEMO_FILE="docs/demos/demo-issue-$ISSUE_NUMBER.md"

  # Crear directorio si no existe
  mkdir -p "$(dirname "$DEMO_FILE")"

  # Crear archivo de demostraci√≥n
  cat > "$DEMO_FILE" << EOF
# Demostraci√≥n - Issue #$ISSUE_NUMBER

## Cambios implementados
<!-- Describe brevemente los cambios realizados -->

## Capturas de pantalla
<!-- A√±ade capturas de pantalla si aplica -->

## C√≥mo probar
<!-- Indica los pasos para probar esta funcionalidad -->
1.
2.
3.

## Notas adicionales
<!-- Cualquier informaci√≥n adicional relevante -->

EOF

  echo -e "${GREEN}‚úÖ Archivo de demostraci√≥n creado en: $DEMO_FILE${NC}"
  echo -e "${YELLOW}Completa el archivo con la informaci√≥n de tu implementaci√≥n.${NC}"
fi

echo
echo -e "${BLUE}=== Revisi√≥n completada ===${NC}"
echo -e "${GREEN}Recuerda actualizar el estado del issue una vez que est√©s conforme con los cambios.${NC}"
